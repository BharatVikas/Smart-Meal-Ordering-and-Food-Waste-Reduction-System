{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srinu\\\\OneDrive\\\\Desktop\\\\food management\\\\frontend\\\\src\\\\components\\\\UploadForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport AdminNavbar from \"./AdminNavbar\"; // Import the AdminNavbar component\nimport \"./UploadForm.css\"; // Import the CSS for the UploadForm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8080/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setMessage(response.data); // Set the success message from backend response\n    } catch (error) {\n      if (error.response) {\n        setMessage(error.response.data); // Set the error message from backend response\n      } else {\n        setMessage(\"An error occurred while uploading the file.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload CSV File for Customer Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"90rxx89DAeVfO1aRLt0hivI8MC0=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","AdminNavbar","jsxDEV","_jsxDEV","UploadForm","_s","file","setFile","message","setMessage","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/srinu/OneDrive/Desktop/food management/frontend/src/components/UploadForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AdminNavbar from \"./AdminNavbar\"; // Import the AdminNavbar component\r\nimport \"./UploadForm.css\"; // Import the CSS for the UploadForm\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      setMessage(response.data); // Set the success message from backend response\r\n    } catch (error) {\r\n      if (error.response) {\r\n        setMessage(error.response.data); // Set the error message from backend response\r\n      } else {\r\n        setMessage(\"An error occurred while uploading the file.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AdminNavbar /> {/* Include the AdminNavbar component */}\r\n      <div className=\"upload-form-container\">\r\n        <h2>Upload CSV File for Customer Registration</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <button type=\"submit\">Upload</button>\r\n        </form>\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AACzC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QAC1EK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFZ,UAAU,CAACU,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;QAClBV,UAAU,CAACc,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM;QACLb,UAAU,CAAC,6CAA6C,CAAC;MAC3D;IACF;EACF,CAAC;EAED,oBACEN,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACF,WAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAChBzB,OAAA;MAAK0B,SAAS,EAAC,uBAAuB;MAAAL,QAAA,gBACpCrB,OAAA;QAAAqB,QAAA,EAAI;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDzB,OAAA;QAAM2B,QAAQ,EAAEhB,YAAa;QAAAU,QAAA,gBAC3BrB,OAAA;UAAO4B,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEtB;QAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjDzB,OAAA;UAAQ4B,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACNpB,OAAO,iBAAIL,OAAA;QAAAqB,QAAA,EAAIhB;MAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxCID,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}